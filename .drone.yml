---
kind: pipeline
type: docker
name: notification

trigger:
  event: [push, pull_request]

steps:
  - name: slack before
    image: plugins/slack
    settings:
      channel: drone-ci
      template: >
        {{build.event}} on branch {{build.branch}} from repo {{repo.name}}

        Build #{{build.number}} started

        {{build.link}}
      webhook:
        from_secret: SLACK_WEBHOOK_URL
---
kind: pipeline
type: docker
name: build and publish docker image

platform:
  os: linux
  arch: amd64

trigger:
  event: [push, pull_request]
  branch:
    exclude:
      - master

steps:
  - name: publish
    image: gordonpn/docker-buildx-drone
    environment:
      DOCKER_TOKEN:
        from_secret: DOCKER_TOKEN
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - /drone/src/.docker/scripts/build.sh

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
---
kind: pipeline
type: docker
name: security

trigger:
  event: [push, pull_request]
  branch:
    exclude:
      - master

depends_on:
  - build and publish docker image

steps:
  - name: bandit test
    image: python:3.8-buster
    commands:
      - cd ./reddit_scraper
      - pip install bandit
      - bandit -r ./
      - cd ../slack_bot
      - bandit -r ./
  - name: safety check
    image: python:3.8-buster
    commands:
      - cd ./reddit_scraper
      - pip install safety
      - safety check
      - safety check -r requirements.txt
      - cd ../slack_bot
      - safety check
      - safety check -r requirements.txt

---
kind: pipeline
type: docker
name: deploy

trigger:
  event:
    - push
  branch:
    - master

platform:
  os: linux
  arch: amd64

steps:
  - name: deploy prod
    image: docker/compose:1.25.5
    environment:
      BOT_CHANNEL:
        from_secret: BOT_CHANNEL
      BOT_ID:
        from_secret: BOT_ID
      MONGO_COLLECTION:
        from_secret: MONGO_COLLECTION
      MONGO_INITDB_DATABASE:
        from_secret: MONGO_INITDB_DATABASE
      MONGO_INITDB_ROOT_PASSWORD:
        from_secret: MONGO_INITDB_ROOT_PASSWORD
      MONGO_INITDB_ROOT_USERNAME:
        from_secret: MONGO_INITDB_ROOT_USERNAME
      MONGO_NON_ROOT_PASSWORD:
        from_secret: MONGO_NON_ROOT_PASSWORD
      MONGO_NON_ROOT_USERNAME:
        from_secret: MONGO_NON_ROOT_USERNAME
      MONGO_SETTINGS:
        from_secret: MONGO_SETTINGS
      REDDIT_CLIENT_ID:
        from_secret: REDDIT_CLIENT_ID
      REDDIT_CLIENT_SECRET:
        from_secret: REDDIT_CLIENT_SECRET
      REDDIT_PASSWORD:
        from_secret: REDDIT_PASSWORD
      REDDIT_USERNAME:
        from_secret: REDDIT_USERNAME
      SCRAPER_HC_UUID:
        from_secret: SCRAPER_HC_UUID
      SLACK_HC_UUID:
        from_secret: SLACK_HC_UUID
      SLACK_TOKEN:
        from_secret: SLACK_TOKEN
      USER_ID:
        from_secret: USER_ID
      TZ: America/Montreal
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - /drone/src/.docker/scripts/deploy.sh

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
